/** @file cal3dfaq.doxygen
  *
  */

/** @page cal3dfaq Cal3D FAQ
 *  Welcome to the Cal3D frequently asked questions list.
 *
 *
 *  @section faqgeneral General Questions about Cal3D
 *
 *  <b>What is Cal3D?</b>
 *
 *
 *  <b>What can I do with Cal3D?</b>
 *
 *
 *  <b>What DOESN'T Cal3D do?</b>
 *
 *
 *  <b>Is Cal3D stable enough to use in a game?</b>
 *
 *  Yes, Cal3D is quite stable and efficient enough for a lot of games. Several
 *  published games have used Cal3D successfully.
 *
 *
 *  <b>Can I use Cal3D for a commercial product?</b>
 *
 *  The short answer is yes. Cal3D is released under the Lesser GNU Public
 *  License (LGPL), which allows you to link in the Cal3D library for your 
 *  commercial game or simulator or whatever.
 *
 *  The catch, however, is that if you make <i>changes</i> to Cal3D and use
 *  them, you are obligated to release the source code under the same license. 
 *
 * 
 *  <b>What operating systems does Cal3D work on?</b>
 *  
 *  Cal3D is written to be cross-platform. It works on Windows, SGI Irix, 
 *  various flavors of Linux, Mac OS X, etc. 
 *
 *  Basically all you need is a decent C++ compiler with standard template
 *  library support. If you want to use the build system, you either need
 *  Visual Studio on Windows, or GNU's autotools on *nix systems.
 *
 *
 *  <b>Can I use Cal3D with OpenGL?, Direct3D, etc?</b>
 *
 *  Cal3D is designed to be independent of any graphics API such as OpenGL or
 *  DirectX. While this makes Cal3D more flexible, it does put a little more
 *  work on the users. 
 *
 *  We have several examples of our miniviewer application that can show you
 *  how to use Cal3D with various graphics APIs such as OpenGL, Direct 3D, or
 *  even shader languages. 
 *
 *  Keep in mind that these examples only show one way how to do it; you are 
 *  free to develop your own methods and techniques specific to your
 *  application. 
 *
 *
 *  <b>Who else is using Cal3D?</b>
 *  
 *  Worldforge - http://www.worldforge.org - This is another open source project
 *  aimed at developing tools for massive-multiplayer online games. Cal3D was 
 *  originally a part of Worldforge, but became a standalone tool.
 *
 *  A Tale in the Desert - http://www.atitd.com - ATITD is a very unique 
 *  massive-multiplayer online roleplaying game where strategy and management 
 *  take precedence over traditional combat. eGenesis used a derivative of Cal3D
 *  that they developed, which is also available on their "download" page. 
 *
 *  Desert Rats - http://www.valusoft.com/products/desertrats.html - A WW2 
 *  action game where you fight the Nazis in northern Africa from a heavily
 *  armed jeep.
 *
 *  Neverending ODC - http://ne-odc.sourceforge.net - Tools to design and edit
 *  massive 3D fantasy worlds. 
 *
 *  If you know of anyone else using Cal3D, let us know!
 *  
 *
 *  @section Character Modeling
 *
 *  <b>How do I make new characters?</b>
 *
 *  This is a job for an artist. Generally, one would create a mesh model of
 *  a character, create a skeletal system for it, animate it, and then export
 *  all of the pieces using the Cal3D exporters. (Skeleton, meshes, materials,
 *  and animations)
 *
 *  <b>What modeling packages does Cal3D support?</b>
 *
 *  We currently have exporters for 3D Studio MAX and Milkshape 3D.
 *
 *  3D Studio MAX - http://www.discreet.com/products/3dsmax
 *  Milkshape 3D - http://www.swissquake.ch/chumbalum-soft
 *
 *
 *  <b>How do I export a character from 3D Studio MAX to Cal3D?</b>
 *
 *  1. First, export the skeleton.
 *
 *  The remaining steps can be performed in any order:
 *
 *  2. Export the mesh or meshes.
 *
 *  3. Export the materials.
 * 
 *  4. Export the animations.
 *
 *
 *  <b>How do I export a skeleton?</b>
 *
 *  
 *
 *  <b>How do I export meshes?</b>
 *
 *
 *  <b>How do I export materials?</b>
 *
 *  There are some tricks to this. The main thing is that the materials have to
 *  be named properly. Each material name that the character uses needs to end
 *  with a number enclosed in brackets, starting with 0 and going up.
 *
 *  For instance, if a character has materials for skin, shirt, face, and hat,
 *  them the materials should be named like this:
 *
 *  skin [0]
 *  shirt [1]
 *  face [2]
 *  hat [3]
 *
 *
 *  <b>How do I export animations?</b>
 *
 *
 *  <b>Why does the exporter crash?</b>
 *
 *
 *  <b>Is there an exporter for Maya or Blender?</b>
 *
 *  There have been rumors of people working on Cal3D exporters for both Maya
 *  and Blender, but they have not been released yet.
 *
 *
 *  <b>What's with these RAW image files?</b>
 *
 *  Previous to version 0.9, the textures for the Paladin sample model were 
 *  contained in a RAW image file format. The current developers are not sure
 *  where they originated from, but they have (as of version 0.9) been converted
 *  to TGA files.
 *
 *  These old RAW files are no longer be supported or necessary.
 *
 *
 *  @section Programming
 *
 *  <b>Are there Python bindings for Cal3D?</b>
 * 
 *  Yes. The Py3D project has Python bindings for Cal3D. You can get them at
 *  the Py3D website:
 *
 *  http://www.py3d.org/pycal3d
 *
 *
 *  <b>What coordinate system does Cal3D use?</b>
 *
 *  Cal3D characters exported from a modeling package such as 3DSMax or 
 *  Milkshape will be in the same coordinate system as the package. For 
 *  instance, a model exported from MAX and loaded for use in an OpenGL
 *  application will require a -90 degree rotation about the X-axis to be
 *  converted to the OpenGL coordinate system.
 *
 *  It should also be noted that Cal3D's math classes assume a left-handed
 *  rotation system. Right-handed systems are much more common, so this is not
 *  a minor detail. Think of it like this: take your right hand and point your 
 *  thumb straight up while curling your fingers a bit - kind of like you're 
 *  holding a coffee mug.
 *
 *  Your thumb is the vector axis of rotation. If you have a positive-value
 *  rotation, you will be rotating counter-clockwise about your thumb's axis.
 *  If you have a negative-value rotation, you'll be rotating clockwise.
 *  
 *  Now do the same thing, but with your left hand. Note that your fingers now
 *  curl around clockwise. So with positive rotation values in a left-handed
 *  system, you get a clockwise rotation. This is the opposite of the right-
 *  handed system.
 *
 *  <b>Why are there classes and core classes?</b>
 *
 *
 *  <b>Can I integrate Cal3D with a scenegraph like OSG or OpenSG?</b>
 *
 *  There are a few ways to get your Cal3D characters working within an 
 *  application that uses a scene graph.
 *
 *  The easiest way is to simply draw your characters using OpenGL after you've
 *  drawn your scene graph. This can be inefficient, however, because you lose
 *  the culling features that the scenegraph provides. Plus you need to be very 
 *  careful about the OpenGL state, which is changed by the scene graph
 *  constantly.
 *  
 *  Most major scene graphs support draw callback functions. Using these, you
 *  can basically attach a Cal3D character to a node inside the scene graph and
 *  the character can be drawn (using your OpenGL commands) automatically as the
 *  scene graph is traversed. This approach requires a little more work, and
 *  will be different depending on the specific scene graph you're using.
 * 
 *  If you're interested in using OpenSceneGraph, there's a Sourceforge project
 *  called osgCal that provides an adapter to put Cal3D models into OSG
 *  applications. Find it here:
 *
 *  http://osgcal.sourceforge.net
 *
 *
 *  @section Compiling Cal3D and the exporters
 * 
 *  <b>What do I need to compile the exporters in Windows?</b>
 * 
 *  In order to compile the 3D Studio MAX exporter, you need the 3DSMax SDK
 *  (Software Development Kit) and the Character Studio SDK. When you install
 *  MAX and/or Character Studio, there will be an option to also install the
 *  SDKs. 
 *
 *  For the Milkshape exporter, you need to get the Milkshape SDK, which is
 *  available separately from their website:
 *
 *  http://www.swissquake.ch/chumbalum-soft/ms3d/download.html
 *
 *
 *  <b>Where is the biped.h / bipexp.h / phyexp.h file?</b>
 *
 *  You need to have the Character Studio SDK installed, which contains these
 *  header files.
 *
 *
 *  <b>Do I need a specific version of 3D Studio MAX to use the exporters?</b>
 *
 *  Cal3D's exporters are known to work with 3DSMax 3, 4, and 5. This includes
 *  Character Studio 4 as well.
 *  
 *
 *
 *
 */ 
